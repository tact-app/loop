#!/usr/bin/env bash

[ "${BASH_VERSINFO:-0}" -ge 4 ] || {
  echo "bash version 4 or higher is required" >&2
  exit 1
}

set -euo pipefail

declare -A config
config['dryrun']=false

function dto() {
  cat \
    tools/loom/responses/GetMyClosedSpaceMemberships.json \
    tools/loom/responses/GetMyClosedSpaceMemberships.err.json |
    gojsonstruct \
      -packagename dto \
      -typename PrivateSpaces \
      >internal/service/loom/dto/mps.go
  cat \
    tools/loom/responses/getOpenSpaces.json \
    tools/loom/responses/getOpenSpaces.err.json |
    gojsonstruct \
      -packagename dto \
      -typename PublicSpaces \
      >internal/service/loom/dto/wps.go
  cat \
    tools/loom/responses/GetWorkspaceArchivedSpaces.json \
    tools/loom/responses/GetWorkspaceArchivedSpaces.err.json |
    gojsonstruct \
      -packagename dto \
      -typename ArchivedSpaces \
      >internal/service/loom/dto/was.go

  cat \
    tools/loom/responses/userWorkspaceMemberships.json \
    tools/loom/responses/userWorkspaceMemberships.err.json |
    gojsonstruct \
      -packagename dto \
      -typename UserWorkspaceMemberships \
      >internal/service/loom/dto/uwm.go
  make format
}

_() {
  if ${config['dryrun']}; then
    echo "${@}"
    return
  fi
  trap 'echo "${@}"' ERR
  "${@}"
}
@debug() { echo "${@}"; }
@trace() { @debug "${@}" && "${@}"; }
@error() { echo "${@}" >&2; }
@fatal() { @error "${@}" && exit 1; }
@usage() {
  cat - <<EOF
Usage: $0 <task> <args>
Tasks:
EOF
  compgen -A function | grep -Ev '^(@|_)' | sort | cat -n
}

function main() {
  if [[ "${1:-}" =~ ^--dry-run|-d$ ]]; then
    config['dryrun']=true
    shift
  fi
  "${@:-@usage}"
}

main "${@}"
